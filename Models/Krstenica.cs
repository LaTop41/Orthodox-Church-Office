



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Crkvena_Kancelarija.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;

    public partial class Krstenica
    {
        [DisplayName("Шифра документа")]
        public int SifraDokumenta { get; set; }
        [DisplayName("Шифра крштенице")]
        [Required(ErrorMessage = "Морате унети шифру крштенице")]
        public int SifraKrstenice { get; set; }
        [DisplayName("Име")]
        [Required(ErrorMessage = "Морате унети име верника")]
        public string ImeVernika { get; set; }
        [DisplayName("Презиме")]
        [Required(ErrorMessage = "Морате унети презиме верника")]
        public string PrezimeVernika { get; set; }
        [DisplayName("Пол")]
        [Required(ErrorMessage = "Морате чекирати пол")]
        public string Pol { get; set; }
        [DisplayName("Датум рођења")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd.MM.yyyy}", ApplyFormatInEditMode = true)]
        [Required(ErrorMessage = "Морате унети датум рођења")]

        public System.DateTime DatumRodjenja { get; set; }
        [DisplayName("Епархија")]
        [Required(ErrorMessage = "Морате унети епархију")]
        public string Eparhija { get; set; }
        [DisplayName("Храм")]
        [Required(ErrorMessage = "Морате унети храм")]
        public string Hram { get; set; }
        [DisplayName("Текућа година")]
        [Required(ErrorMessage = "Морате унети текућу годину")]

        public int TekucaGodina { get; set; }
        [DisplayName("Занимање")]
        [Required(ErrorMessage = "Морате унети занимање")]
        public string ZanimanjeVernika { get; set; }
        [DisplayName("Место рођења")]
        [Required(ErrorMessage = "Морате унети место рођења")]
        public string MestoRodjenja { get; set; }
        [DisplayName("Датум крштења")]
        [Required(ErrorMessage = "Мореате унети датум крштења")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd.MM.yyyy}", ApplyFormatInEditMode = true)]
        public System.DateTime DatumKrstenja { get; set; }
        [DisplayName("Име оца")]
        [Required(ErrorMessage = "Морате унети име оца")]
        
        public string ImeOca { get; set; }
        [DisplayName("Презиме оца")]
        [Required(ErrorMessage = "Морате унети презиме оца")]
        public string PrezimeOca { get; set; }
        [DisplayName("Име мајке")]
        [Required(ErrorMessage = "Морате унети име мајке")]
        public string ImeMajke { get; set; }
        [DisplayName("Презиме мајке")]
        [Required(ErrorMessage = "Морате унети презиме мајке")]
        public string PrezimeMajke { get; set; }
        [DisplayName("Занимање оца")]
        [Required(ErrorMessage = "Морате унети занимање оца")]
        public string ZanimanjeOca { get; set; }
        [DisplayName("Занимање мајке")]
        [Required(ErrorMessage = "Морате унети занимање мајке")]
        public string ZanimanjeMajke { get; set; }
        [DisplayName("Место становања родитеља")]
        [Required(ErrorMessage = "Морате унети адресу становања")]
        public string MestoStanovanjaRoditelja { get; set; }
        [DisplayName("Народност оца")]
        [Required(ErrorMessage = "Морате унети народност оца")]
        public string NarodnostOca { get; set; }
        [DisplayName("Народност мајке")]
        [Required(ErrorMessage = "Морате унети народност мајке")]
        public string NarodnostMajke { get; set; }
        [DisplayName("Дете по реду")]
        [Required(ErrorMessage = "Морате унети које је дете по реду")]

        public string DetePoRedu { get; set; }
        [DisplayName("Дете близанац")]
        [Required(ErrorMessage = "Да ли је дете близанац? ДА или НЕ")]
        public string DeteBlizanac { get; set; }
        [DisplayName("Телесни недостаци")]
        public string TelesniNedostaci { get; set; }
        [DisplayName("Име кума")]
        [Required(ErrorMessage = "Морате унети име кума")]
        public string ImeKuma { get; set; }
        [DisplayName("Презиме кума")]
        [Required(ErrorMessage = "Морате унети презиме кума")]
        public string PrezimeKuma { get; set; }
        [DisplayName("Место становања кума")]
        [Required(ErrorMessage = "Морате унети адресу!")]
        public string MestoStanovanjaKuma { get; set; }
        [DisplayName("Име свештеника")]
        [Required(ErrorMessage = "Морате унети име свештеника")]
        public string ImeSvestenika { get; set; }
        [DisplayName("Презиме свештеника")]
        [Required(ErrorMessage = "Морате унети презиме свештеника")]
        public string PrezimeSvestenika { get; set; }
        [DisplayName("Примедба")]
        [DataType(DataType.MultilineText)]
        public string Primedba { get; set; }


        public virtual Dokument Dokument { get; set; }

        public static IEnumerable<Krstenica> GetBySifraKr(int Sifra)
        {
            CrkvenaKancelarijaEntities cr = new CrkvenaKancelarijaEntities();
            List<Krstenica> krstenice = new List<Krstenica>();

            foreach (Krstenica k in cr.Krstenicas.Where(t => t.SifraDokumenta == Sifra))
            {
                Krstenica krstenicaBO = new Krstenica();

                krstenicaBO.Dokument = new Dokument()
                {
                    SifraDokumenta = k.Dokument.SifraDokumenta,
                };

                krstenicaBO.SifraKrstenice = k.SifraKrstenice;

                krstenicaBO.ImeVernika = k.ImeVernika;

                krstenicaBO.PrezimeVernika = k.PrezimeVernika;

                krstenicaBO.Pol = k.Pol;

                krstenicaBO.DatumRodjenja = k.DatumRodjenja;

                krstenicaBO.Eparhija = k.Eparhija;

                krstenicaBO.Hram = k.Hram;

                krstenicaBO.TekucaGodina = k.TekucaGodina;

                krstenicaBO.ZanimanjeVernika = k.ZanimanjeVernika;

                krstenicaBO.MestoRodjenja = k.MestoRodjenja;

                krstenicaBO.DatumKrstenja = k.DatumKrstenja;

                krstenicaBO.ImeOca = k.ImeOca;

                krstenicaBO.PrezimeOca = k.PrezimeOca;

                krstenicaBO.ImeMajke = k.ImeMajke;

                krstenicaBO.PrezimeMajke = k.PrezimeMajke;

                krstenicaBO.ZanimanjeOca = k.ZanimanjeOca;

                krstenicaBO.ZanimanjeMajke = k.ZanimanjeMajke;

                krstenicaBO.MestoStanovanjaRoditelja = k.MestoStanovanjaRoditelja;

                krstenicaBO.NarodnostOca = k.NarodnostMajke;

                krstenicaBO.NarodnostMajke = k.NarodnostMajke;

                krstenicaBO.DetePoRedu = k.DetePoRedu;

                krstenicaBO.DeteBlizanac = k.DeteBlizanac;

                krstenicaBO.TelesniNedostaci = k.TelesniNedostaci;

                krstenicaBO.ImeKuma = k.ImeKuma;

                krstenicaBO.PrezimeKuma = k.PrezimeKuma;

                krstenicaBO.MestoStanovanjaKuma = k.MestoStanovanjaKuma;

                krstenicaBO.ImeSvestenika = k.ImeSvestenika;

                krstenicaBO.PrezimeSvestenika = k.PrezimeSvestenika;

                krstenicaBO.Primedba = k.Primedba;

                krstenice.Add(krstenicaBO);
            }
            return krstenice;
        }

        public static IEnumerable<Krstenica> GetByIdKr(String ime)
        {
            CrkvenaKancelarijaEntities cr = new CrkvenaKancelarijaEntities();
            List<Krstenica> krstenice = new List<Krstenica>();

            foreach (Krstenica k in cr.Krstenicas.Where(t => t.ImeVernika == ime))
            {
                Krstenica krstenicaBO = new Krstenica();

                krstenicaBO.Dokument = new Dokument()
                {
                    SifraDokumenta = k.Dokument.SifraDokumenta,
                };

                krstenicaBO.SifraKrstenice = k.SifraKrstenice;

                krstenicaBO.ImeVernika = k.ImeVernika;

                krstenicaBO.PrezimeVernika = k.PrezimeVernika;

                krstenicaBO.Pol = k.Pol;

                krstenicaBO.DatumRodjenja = k.DatumRodjenja;

                krstenicaBO.Eparhija = k.Eparhija;

                krstenicaBO.Hram = k.Hram;

                krstenicaBO.TekucaGodina = k.TekucaGodina;

                krstenicaBO.ZanimanjeVernika = k.ZanimanjeVernika;

                krstenicaBO.MestoRodjenja = k.MestoRodjenja;

                krstenicaBO.DatumKrstenja = k.DatumKrstenja;

                krstenicaBO.ImeOca = k.ImeOca;

                krstenicaBO.PrezimeOca = k.PrezimeOca;

                krstenicaBO.ImeMajke = k.ImeMajke;

                krstenicaBO.PrezimeMajke = k.PrezimeMajke;

                krstenicaBO.ZanimanjeOca = k.ZanimanjeOca;

                krstenicaBO.ZanimanjeMajke = k.ZanimanjeMajke;

                krstenicaBO.MestoStanovanjaRoditelja = k.MestoStanovanjaRoditelja;

                krstenicaBO.NarodnostOca = k.NarodnostMajke;

                krstenicaBO.NarodnostMajke = k.NarodnostMajke;

                krstenicaBO.DetePoRedu = k.DetePoRedu;

                krstenicaBO.DeteBlizanac = k.DeteBlizanac;

                krstenicaBO.TelesniNedostaci = k.TelesniNedostaci;

                krstenicaBO.ImeKuma = k.ImeKuma;

                krstenicaBO.PrezimeKuma = k.PrezimeKuma;

                krstenicaBO.MestoStanovanjaKuma = k.MestoStanovanjaKuma;

                krstenicaBO.ImeSvestenika = k.ImeSvestenika;

                krstenicaBO.PrezimeSvestenika = k.PrezimeSvestenika;

                krstenicaBO.Primedba = k.Primedba;

                krstenice.Add(krstenicaBO);
            }
            return krstenice;
        }


    }
}













